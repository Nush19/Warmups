We'll say that a 1 immediately followed by a 3 in an array is an "unlucky" 1. 
Return true if the given array contains an unlucky 1 in the first 2 or last 2 positions in the array. 

Unlucky1({1, 3, 4, 5}) -> true
Unlucky1({2, 1, 3, 4, 5}) -> true
Unlucky1({1, 1, 1}) -> false

public static boolean Unlucky1(int[] numbers) {
     // defining the unlucky1() method and returning true or false 
    public static bool unlucky1(int[] nums) {
        
      if (nums.Length < 2) {
        return false;
      } else if ((nums[0] == 1 && nums[1] == 3) || (nums[nums.Length-2] == 1 && nums[nums.Length-1] == 3)) {
          return true;
        } else if (nums.Length > 2 && nums[1] == 1 && nums[2] == 3) {
            return true;
        } else
          return false;
    
    }

 
    // Driver Code
    public static void Main()
    {
        // initilizing three given arrays
       int[] arr1 = {1, 3, 4, 5};
       int[] arr2 = {2, 1, 3, 4, 5};
       int[] arr3 = {1 ,1 , 1};
       
          // Function Call
        Console.WriteLine("unlucky1({1, 3, 4, 5}) --> "+ unlucky1(arr1));
        Console.WriteLine("unlucky1({2, 1, 3, 4, 5}) --> "+ unlucky1(arr2));
        Console.WriteLine("unlucky1({1, 1, 1}) --> "+ unlucky1(arr3));
    }
  }
}  





